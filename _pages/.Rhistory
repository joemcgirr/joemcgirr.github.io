as.data.frame(patho)
head(start_lost)
for(rsid in start_lost$ID){
print(annotations(snp = rsid, output = 'snpedia'))
}
stop_lost <- get_table_for_annotation("stop_lost")
for(rsid in stop_lost$ID){
print(annotations(snp = rsid, output = 'snpedia'))
}
gsub("\\s*\\([^\\)]+\\)","","http://www.snpedia.com/index.php/Rs241448(C;T)")
head(ot_table)
head(start_lost)
head(as.data.frame(start_lost))
# get table with rsids for an ontology term
annotations.for.ontology.term <- function(ontology_term){
ot_table <- filter(ann, grepl(ontology_term, ANN))
anns <- ot_table$ANN
ot_anns <- c()
ot_alleles <- c()
for(ann_string in anns){
ot_anns <- c(ot_anns,paste0(paste(strsplit(grep(ontology_term, strsplit(ann_string, ",")[[1]], value = TRUE)[1], "\\|")[[1]][c(1,2,3,4,7)], collapse = "|"),"|"))
}
ot_table$ANN <- ot_anns
ot_table <- separate(ANN, c("allele","annotation","impact","gene_name","feature_id"), sep = "\\|") |>
rename("myGenotype" = "myVariants.GT")
return(ot_table)
}
ot_table <- annotations.for.ontology.term("start_lost")
# get table with rsids for an ontology term
annotations.for.ontology.term <- function(ontology_term){
ot_table <- filter(ann, grepl(ontology_term, ANN))
anns <- ot_table$ANN
ot_anns <- c()
ot_alleles <- c()
for(ann_string in anns){
ot_anns <- c(ot_anns,paste0(paste(strsplit(grep(ontology_term, strsplit(ann_string, ",")[[1]], value = TRUE)[1], "\\|")[[1]][c(1,2,3,4,7)], collapse = "|"),"|"))
}
ot_table$ANN <- ot_anns
ot_table <- separate(ot_table,ANN, c("allele","annotation","impact","gene_name","feature_id"), sep = "\\|") |>
rename("myGenotype" = "myVariants.GT")
return(ot_table)
}
ot_table <- annotations.for.ontology.term("start_lost")
ot_table
# get table with rsids for an ontology term
annotations.for.ontology.term <- function(ontology_term){
ot_table <- filter(ann, grepl(ontology_term, ANN))
anns <- ot_table$ANN
ot_anns <- c()
ot_alleles <- c()
for(ann_string in anns){
ot_anns <- c(ot_anns,paste0(paste(strsplit(grep(ontology_term, strsplit(ann_string, ",")[[1]], value = TRUE)[1], "\\|")[[1]][c(1,2,3,4,7)], collapse = "|"),"|"))
}
ot_table$ANN <- ot_anns
ot_table <- separate(ot_table,ANN, c("allele","annotation","impact","gene_name","feature_id"), sep = "\\|") |>
rename("myGenotype_PlusOrientation" = "myVariants.GT")
return(ot_table)
}
ot_table <- annotations.for.ontology.term("start_lost")
snpedia_urls <- c()
myGenotypes  <- c()
for(rsid in ot_table$ID){
snpedia_table <- annotations(snp = rsid, output = 'snpedia')
if(nrow(snpedia_table)>0){
snpedia_urls <- c(snpedia_urls,gsub("\\s*\\([^\\)]+\\)","",snpedia_table$url[1]))
myGenotype <- c(myGenotype, filter(ot_table, ID == rsid) |> pull(myGenotype))
}
}
snpedia_urls <- c()
myGenotypes  <- c()
for(rsid in ot_table$ID){
snpedia_table <- annotations(snp = rsid, output = 'snpedia')
if(nrow(snpedia_table)>0){
snpedia_urls <- c(snpedia_urls,gsub("\\s*\\([^\\)]+\\)","",snpedia_table$url[1]))
myGenotypes <- c(myGenotypes, filter(ot_table, ID == rsid) |> pull(myGenotype))
}
}
snpedia_urls <- c()
myGenotypes  <- c()
for(rsid in ot_table$ID){
snpedia_table <- annotations(snp = rsid, output = 'snpedia')
if(nrow(snpedia_table)>0){
snpedia_urls <- c(snpedia_urls,gsub("\\s*\\([^\\)]+\\)","",snpedia_table$url[1]))
myGenotypes <- c(myGenotypes, filter(ot_table, ID == rsid) |> pull(myGenotype_PlusOrientation))
}
}
myGenotypes
snpedia_table
snpedia_urls
# get table with rsids for an ontology term
annotations.for.ontology.term <- function(ontology_term){
ot_table <- filter(ann, grepl(ontology_term, ANN))
anns <- ot_table$ANN
ot_anns <- c()
ot_alleles <- c()
for(ann_string in anns){
ot_anns <- c(ot_anns,paste0(paste(strsplit(grep(ontology_term, strsplit(ann_string, ",")[[1]], value = TRUE)[1], "\\|")[[1]][c(1,2,3,4,7)], collapse = "|"),"|"))
}
ot_table$ANN <- ot_anns
ot_table <- separate(ot_table,ANN, c("allele","annotation","impact","gene_name","feature_id"), sep = "\\|") |>
rename("myGenotype" = "myVariants.GT")
return(ot_table)
}
# search for SNPedia annotations for rsids output by annotations.for.ontology.term()
get.snpedia.urls <- function(ot_table){
snpedia_urls <- c()
myGenotypes  <- c()
for(rsid in ot_table$ID){
snpedia_table <- annotations(snp = rsid, output = 'snpedia')
if(nrow(snpedia_table)>0){
snpedia_urls <- c(snpedia_urls,gsub("\\s*\\([^\\)]+\\)","",snpedia_table$url[1]))
myGenotypes <- c(myGenotypes, filter(ot_table, ID == rsid) |> pull(myGenotype))
}
}
return(data.frame(SNPedia_urls = snpedia_urls, myGenotype_PlusOrientation = myGenotype))
}
get.snpedia.urls(annotations.for.ontology.term("start_lost"))
# search for SNPedia annotations for rsids output by annotations.for.ontology.term()
get.snpedia.urls <- function(ot_table){
snpedia_urls <- c()
myGenotypes  <- c()
for(rsid in ot_table$ID){
snpedia_table <- annotations(snp = rsid, output = 'snpedia')
if(nrow(snpedia_table)>0){
snpedia_urls <- c(snpedia_urls,gsub("\\s*\\([^\\)]+\\)","",snpedia_table$url[1]))
myGenotypes <- c(myGenotypes, filter(ot_table, ID == rsid) |> pull(myGenotype))
}
}
return(data.frame(SNPedia_urls = snpedia_urls, myGenotype_PlusOrientation = myGenotypes))
}
# get table with rsids for an ontology term
annotations.for.ontology.term <- function(ontology_term){
ot_table <- filter(ann, grepl(ontology_term, ANN))
anns <- ot_table$ANN
ot_anns <- c()
ot_alleles <- c()
for(ann_string in anns){
ot_anns <- c(ot_anns,paste0(paste(strsplit(grep(ontology_term, strsplit(ann_string, ",")[[1]], value = TRUE)[1], "\\|")[[1]][c(1,2,3,4,7)], collapse = "|"),"|"))
}
ot_table$ANN <- ot_anns
ot_table <- separate(ot_table,ANN, c("allele","annotation","impact","gene_name","feature_id"), sep = "\\|") |>
rename("myGenotype" = "myVariants.GT")
return(ot_table)
}
get.snpedia.urls(annotations.for.ontology.term("start_lost"))
ontology_term
ontology_term <- "start_lost"
ot_table <- filter(ann, grepl(ontology_term, ANN))
anns <- ot_table$ANN
ot_anns <- c()
ot_alleles <- c()
for(ann_string in anns){
ot_anns <- c(ot_anns,paste0(paste(strsplit(grep(ontology_term, strsplit(ann_string, ",")[[1]], value = TRUE)[1], "\\|")[[1]][c(1,2,3,4,7)], collapse = "|"),"|"))
}
ot_table$ANN <- ot_anns
head(ot_table)
separate(ot_table,ANN, c("allele","annotation","impact","gene_name","feature_id"), sep = "\\|") |>
rename("myGenotype" = "myVariants.GT")
separate(ot_table,ANN, c("allele","annotation","impact","gene_name","feature_id"), sep = "\\|", extra = "drop") |>
rename("myGenotype" = "myVariants.GT")
# get table with rsids for an ontology term
annotations.for.ontology.term <- function(ontology_term){
ot_table <- filter(ann, grepl(ontology_term, ANN))
anns <- ot_table$ANN
ot_anns <- c()
ot_alleles <- c()
for(ann_string in anns){
ot_anns <- c(ot_anns,paste0(paste(strsplit(grep(ontology_term, strsplit(ann_string, ",")[[1]], value = TRUE)[1], "\\|")[[1]][c(1,2,3,4,7)], collapse = "|"),"|"))
}
ot_table$ANN <- ot_anns
ot_table <- separate(ot_table,ANN, c("allele","annotation","impact","gene_name","feature_id"), sep = "\\|", extra = "drop") |>
rename("myGenotype" = "myVariants.GT")
return(ot_table)
}
# search for SNPedia annotations for rsids output by annotations.for.ontology.term()
get.snpedia.urls <- function(ot_table){
snpedia_urls <- c()
myGenotypes  <- c()
for(rsid in ot_table$ID){
snpedia_table <- annotations(snp = rsid, output = 'snpedia')
if(nrow(snpedia_table)>0){
snpedia_urls <- c(snpedia_urls,gsub("\\s*\\([^\\)]+\\)","",snpedia_table$url[1]))
myGenotypes <- c(myGenotypes, filter(ot_table, ID == rsid) |> pull(myGenotype))
}
}
return(data.frame(SNPedia_urls = snpedia_urls, myGenotype_PlusOrientation = myGenotypes))
}
get.snpedia.urls(annotations.for.ontology.term("stop_lost"))
get.snpedia.urls(annotations.for.ontology.term("stop_gained"))
ot_table <- annotations.for.ontology.term("stop_gained")
snpedia_urls <- c()
myGenotypes  <- c()
for(rsid in ot_table$ID){
snpedia_table <- annotations(snp = rsid, output = 'snpedia')}
rsid
# get table with rsids for an ontology term
annotations.for.ontology.term <- function(ontology_term){
ot_table <- filter(ann, grepl(ontology_term, ANN))
anns <- ot_table$ANN
ot_anns <- c()
ot_alleles <- c()
for(ann_string in anns){
ot_anns <- c(ot_anns,paste0(paste(strsplit(grep(ontology_term, strsplit(ann_string, ",")[[1]], value = TRUE)[1], "\\|")[[1]][c(1,2,3,4,7)], collapse = "|"),"|"))
}
ot_table$ANN <- ot_anns
ot_table <- separate(ot_table,ANN, c("allele","annotation","impact","gene_name","feature_id"), sep = "\\|", extra = "drop") |>
rename("myGenotype" = "myVariants.GT")
return(ot_table)
}
# search for SNPedia annotations for rsids output by annotations.for.ontology.term()
get.snpedia.urls <- function(ot_table){
snpedia_urls <- c()
myGenotypes  <- c()
ot_table <- filter(ot_table, grepl("rs",ID))
for(rsid in ot_table$ID){
snpedia_table <- annotations(snp = rsid, output = 'snpedia')
if(nrow(snpedia_table)>0){
snpedia_urls <- c(snpedia_urls,gsub("\\s*\\([^\\)]+\\)","",snpedia_table$url[1]))
myGenotypes <- c(myGenotypes, filter(ot_table, ID == rsid) |> pull(myGenotype))
}
}
return(data.frame(SNPedia_urls = snpedia_urls, myGenotype_PlusOrientation = myGenotypes))
}
get.snpedia.urls(annotations.for.ontology.term("stop_gained"))
get.snpedia.urls(annotations.for.ontology.term("splice_acceptor_variant"))
head(ot_table)
# get table with rsids for an ontology term
annotations.for.ontology.term <- function(ontology_term){
ot_table <- filter(ann, grepl(ontology_term, ANN))
anns <- ot_table$ANN
ot_anns <- c()
ot_alleles <- c()
for(ann_string in anns){
ot_anns <- c(ot_anns,paste0(paste(strsplit(grep(ontology_term, strsplit(ann_string, ",")[[1]], value = TRUE)[1], "\\|")[[1]][c(1,2,3,4,7)], collapse = "|"),"|"))
}
ot_table$ANN <- ot_anns
ot_table <- separate(ot_table,ANN, c("allele","annotation","impact","gene_name","feature_id"), sep = "\\|", extra = "drop")
return(ot_table)
}
# get table with rsids for an ontology term
annotations.for.ontology.term <- function(ontology_term){
ot_table <- filter(ann, grepl(ontology_term, ANN))
anns <- ot_table$ANN
ot_anns <- c()
ot_alleles <- c()
for(ann_string in anns){
ot_anns <- c(ot_anns,paste0(paste(strsplit(grep(ontology_term, strsplit(ann_string, ",")[[1]], value = TRUE)[1], "\\|")[[1]][c(1,2,3,4,7)], collapse = "|"),"|"))
}
ot_table$ANN <- ot_anns
ot_table <- separate(ot_table,ANN, c("allele","annotation","impact","gene_name","feature_id"), sep = "\\|", extra = "drop")
return(ot_table)
}
# search for SNPedia annotations for rsids output by annotations.for.ontology.term()
get.snpedia.urls <- function(ot_table){
snpedia_urls <- c()
myGTs  <- myADs <- myGQs <- c()
ot_table <- filter(ot_table, grepl("rs",ID))
for(rsid in ot_table$ID){
snpedia_table <- annotations(snp = rsid, output = 'snpedia')
if(nrow(snpedia_table)>0){
snpedia_urls <- c(snpedia_urls,gsub("\\s*\\([^\\)]+\\)","",snpedia_table$url[1]))
myGTs <- c(myGTs, filter(ot_table, ID == rsid) |> pull(myVariants.GT))
myADs <- c(myADs, filter(ot_table, ID == rsid) |> pull(myVariants.AD))
myGQs <- c(myGQs, filter(ot_table, ID == rsid) |> pull(myVariants.GQ))
}
}
return(data.frame(SNPedia_urls = snpedia_urls, Genotype_PlusOrientation = myGTs,
Allele_Depth = myADs, Genotype_Quality = myGQs))
}
get.snpedia.urls(annotations.for.ontology.term("start_lost"))
install.packages('gt')
library(gt)
get.snpedia.urls(annotations.for.ontology.term("start_lost")) |> gt() |> fmt (columns = 'SNPedia_urls',fns = make_hyperlink)
make.hyperlink <-  function(myurl,mytext=myurl) {
paste('<a href="',myurl,'">',mytext,'</a>')
}
get.snpedia.urls(annotations.for.ontology.term("start_lost")) |> gt() |> fmt (columns = 'SNPedia_urls',fns = make.hyperlink)
head(ann_types)
(filter(ann_types, impact == "HIGH", n_variants > 0) |> pull(ontology_term))
filter(ann_types, impact == "HIGH", n_variants > 0) |> pull(ontology_term)
ann_types
filter(ann_types, impact == "HIGH", n_variants > 0)
ontology_term
ontology_term <- NULL
filter(ann_types, impact == "HIGH", n_variants > 0) |> pull(ontology_term)
start_time <- Sys.time()
library(tidyverse)
library(vroom)
library(rsnps)
library(gt)
library(beepr)
# Wong, B. Points of view: Color blindness. Nat Methods (2011).
bla <- '#000000'
blu <- '#0072b2'
grb <- '#56b4e9'
lir <- '#cc79a7'
gre <- '#009e73'
red <- '#d55e00'
org <- '#e69f00'
yel <- '#f0e442'
gry <- '#BBBBBB'
wk_dir <- "C:/Users/jmcgirr/dna/"
ann <- vroom(paste0(wk_dir,"nebula/vcf/myVariants.ann.txt"), guess_max = 1000000)# |>
#separate(myVariants.GT, c("vcf_allele1","vcf_allele2"), sep = "/|\\|")
#separate(ANN, paste("ANN", 1:10, sep = "_"), sep = ",", extra = "drop")
ann_types <- data.frame(impact = c("HIGH","HIGH","HIGH","HIGH","HIGH","HIGH","HIGH","HIGH","HIGH","HIGH","MODERATE","MODERATE","MODERATE","MODERATE","MODERATE","MODERATE","MODERATE","MODERATE","MODERATE","MODERATE","MODERATE","LOW","LOW","LOW","LOW","LOW","LOW","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER","MODIFIER"),
ontology_term = c("chromosome_number_variation","exon_loss_variant","frameshift_variant","rare_amino_acid_variant","splice_acceptor_variant","splice_donor_variant","start_lost","stop_gained","stop_lost","transcript_ablation","3_prime_UTR_truncation&exon_loss","5_prime_UTR_truncation&exon_loss_variant","coding_sequence_variant-moderate","conservative_inframe_deletion","conservative_inframe_insertion","disruptive_inframe_deletion","disruptive_inframe_insertion","missense_variant","regulatory_region_ablation","splice_region_variant-moderate","TFBS_ablation","5_prime_UTR_premature_start_codon_gain_variant","initiator_codon_variant","splice_region_variant-low","start_retained","stop_retained_variant","synonymous_variant","3_prime_UTR_variant","5_prime_UTR_variant","coding_sequence_variant-modifier","conserved_intergenic_variant","conserved_intron_variant","downstream_gene_variant","exon_variant","feature_elongation","feature_truncation","gene_variant","intergenic_region","intragenic_variant","intron_variant","mature_miRNA_variant","miRNA","NMD_transcript_variant","non_coding_transcript_exon_variant","non_coding_transcript_variant","regulatory_region_amplification","regulatory_region_variant","TF_binding_site_variant","TFBS_amplification","transcript_amplification","transcript_variant","upstream_gene_variant"))
# count the number of variants annotated for each ontology
n_variants <- c()
for(ot in ann_types$ontology_term){
n_variants <- c(n_variants,(filter(ann, grepl(ot, ANN)) |> nrow()))
#print(ot)
}
#beep()
# Time difference of 11.76812 mins
ann_types$n_variants <- n_variants
ann_types <- arrange(ann_types, n_variants)
ann_types$ontology_term <- factor(ann_types$ontology_term, levels = ann_types$ontology_term)
ann_types$impact <- factor(ann_types$impact, levels = c("HIGH","MODERATE","LOW","MODIFIER"))
ann_types$log_n_variants <- log10(ann_types$n_variants)
p1 <- ann_types|>
ggplot(aes(ontology_term, n_variants, fill = impact)) +
geom_col() +
coord_flip() +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14),
axis.title=element_text(size=14),
axis.text=element_text(size=12))+
ylab("\nannotated variants")+ xlab("")+
#ggtitle(paste0(nrow()))
geom_text(aes(label=n_variants), position=position_stack(), hjust=-0.5)+
scale_fill_manual(values = c(red,yel,blu,gre))
print(p1)
p1 <- ann_types|> filter(impact %in% c("HIGH","MODERATE"), ontology_term != "missense_variant") |>
ggplot(aes(ontology_term, n_variants, fill = impact)) +
geom_col() +
coord_flip() +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14),
axis.title=element_text(size=14),
axis.text=element_text(size=12))+
ylab("\nannotated variants")+ xlab("")+
#ggtitle(paste0(nrow()))
geom_text(aes(label=n_variants), position=position_stack(), hjust=-0.5)+
scale_fill_manual(values = c(red,yel,blu,gre))
print(p1)
beep(sound = 8)
annotations.for.ontology.term <- function(ontology_term){
ot_table <- filter(ann, grepl(ontology_term, ANN))
anns <- ot_table$ANN
ot_anns <- c()
ot_alleles <- c()
for(ann_string in anns){
ot_anns <- c(ot_anns,paste0(paste(strsplit(grep(ontology_term, strsplit(ann_string, ",")[[1]], value = TRUE)[1], "\\|")[[1]][c(1,2,3,4,7)], collapse = "|"),"|"))
}
ot_table$ANN <- ot_anns
ot_table <- separate(ot_table,ANN, c("allele","annotation","impact","gene_name","feature_id"), sep = "\\|", extra = "drop")
return(ot_table)
}
# search for SNPedia annotations for rsids output by annotations.for.ontology.term()
get.snpedia.urls <- function(ot_table){
snpedia_urls <- c()
myGTs  <- myADs <- myGQs <- c()
ot_table <- filter(ot_table, grepl("rs",ID))
for(rsid in ot_table$ID){
snpedia_table <- annotations(snp = rsid, output = 'snpedia')
if(nrow(snpedia_table)>0){
snpedia_urls <- c(snpedia_urls,gsub("\\s*\\([^\\)]+\\)","",snpedia_table$url[1]))
myGTs <- c(myGTs, filter(ot_table, ID == rsid) |> pull(myVariants.GT))
myADs <- c(myADs, filter(ot_table, ID == rsid) |> pull(myVariants.AD))
myGQs <- c(myGQs, filter(ot_table, ID == rsid) |> pull(myVariants.GQ))
}
}
return(data.frame(SNPedia_urls = snpedia_urls, Genotype_PlusOrientation = myGTs,
Allele_Depth = myADs, Genotype_Quality = myGQs))
}
make.hyperlink <-  function(myurl,mytext=myurl) {
paste('<a href="',myurl,'">',mytext,'</a>')
}
for(i_ontology_term in (filter(ann_types, impact == "HIGH", n_variants > 0) |> pull(ontology_term))){
get.snpedia.urls(annotations.for.ontology.term(i_ontology_term)) |> gt() |> fmt (columns = 'SNPedia_urls',fns = make.hyperlink)
}
for(i_ontology_term in (filter(ann_types, impact == "HIGH", n_variants > 0) |> pull(ontology_term))){
print(get.snpedia.urls(annotations.for.ontology.term(i_ontology_term)) |> gt() |> fmt (columns = 'SNPedia_urls',fns = make.hyperlink))
}
i_ontology_term
print(get.snpedia.urls(annotations.for.ontology.term(i_ontology_term)) |>
gt() |>
tab_header(title = "SNPedia entries for variants annotated as high impact", subtitle = i_ontology_term) |>
fmt (columns = 'SNPedia_urls',fns = make.hyperlink))
htmltool::tagList()''
htmltool::tagList()
htmltools::tagList()
install.packages("rmdformats")
knitr::opts_chunk$set(echo = TRUE)
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
#setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
#KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
setwd("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/")
KnitPost("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
#setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
#KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
setwd("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/")
KnitPost("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
#setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
#KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
setwd("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/")
KnitPost("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/fun_projects.Rmd")
head(ann_types)
suppressPackageStartupMessages(library(tidyverse))
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
#setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
#KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
setwd("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/")
KnitPost("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/fun_projects.Rmd")
sessionInfo()
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
#setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
#KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
setwd("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/")
KnitPost("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/fun_projects.Rmd")
