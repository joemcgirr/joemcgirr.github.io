"journals"),
n = c(length(unique(catalog_matches$snps)),
length(unique(catalog_matches$mapped_trait)),
length(unique(catalog_matches$journal))))
match_stats |> gt() |> tab_header(title = "Examples of Catalog Matches")
catalog_matches[4:9,] |> gt() |> tab_header(title = "Examples of Catalog Matches")
match_stats <- data.frame(column = c("rsIDs",
"traits",
"journals"),
n = c(length(unique(catalog_matches$snps)),
length(unique(catalog_matches$mapped_trait)),
length(unique(catalog_matches$journal))))
match_stats |> gt() |> tab_header(title = "Examples of Catalog Matches")
het_or_hom_for_risk_allele <- filter(catalog_matches,vcf_allele_1 == risk_allele | vcf_allele_2 == risk_allele, p_value < 1e-20) |>
arrange(risk_allele_frequency, p_value) |>
select(c(disease_trait, p_value, or_or_beta, risk_allele, snps, link))
het_or_hom_for_risk_allele
homozygous_for_risk_allele <- filter(catalog_matches,vcf_allele_1 == risk_allele, vcf_allele_2 == risk_allele, p_value < 1e-20) |>
arrange(risk_allele_frequency, p_value)
homozygous_for_risk_allele_low_freq <- filter(catalog_matches,vcf_allele_1 == risk_allele, vcf_allele_2 == risk_allele, risk_allele_frequency < 0.1, p_value < 1e-20) |>
arrange(p_value) |>
select(c(disease_trait, p_value, or_or_beta, risk_allele, snps, link))
homozygous_for_risk_allele_low_freq
prs_output_path <- "C:/Users/jmcgirr/dna/prskb/PRS_default.tsv"
prs <- read_tsv(prs_output_path) |>
filter(!is.na(Percentile)) |>
filter(`SNP Overlap` > 10) |>
arrange(desc(Percentile))
head(prs)
head(select(prs,c(`Reported Trait`, `Trait`, `Citation`, `Included SNPs`, `Polygenic Risk Score`, `Percentile`))) |>
gt() |>
tab_header(title = "PRSKB command line tool output")
prs
head(catalog_matches)
catalog_matches <-  as.data.frame(gwtrunc) |>
filter(SNPS %in% vcf$ID) |>
select(-c(DATE.ADDED.TO.CATALOG, FIRST.AUTHOR, width, STUDY, REGION, CHR_ID,
UPSTREAM_GENE_ID, DOWNSTREAM_GENE_ID, SNP_GENE_IDS, UPSTREAM_GENE_DISTANCE,
DOWNSTREAM_GENE_DISTANCE,MERGED, SNP_ID_CURRENT,PVALUE_MLOG,PLATFORM..SNPS.PASSING.QC.,
STUDY.ACCESSION,P.VALUE..TEXT.,PUBMEDID)) |>
separate(STRONGEST.SNP.RISK.ALLELE, c("STRONGEST_SNP","RISK_ALLELE"), sep = "-" ,remove = TRUE) |>
select(-c(STRONGEST_SNP)) |>
arrange(P.VALUE) |>
mutate(log10_p = -log10(P.VALUE)) |>
inner_join(vcf, by = c("SNPS" = "ID"))
names(catalog_matches) <- to_snake_case(names(catalog_matches))
match_stats <- data.frame(column = c("rsIDs",
"phenotypes",
"journals"),
n = c(length(unique(catalog_matches$snps)),
length(unique(catalog_matches$mapped_trait)),
length(unique(catalog_matches$journal))))
catalog_matches[4:9,] |> gt() |> tab_header(title = "Examples of Catalog Matches")
p1 <- catalog_matches[1:50,] |>
ggplot(aes(mapped_trait, log10_p, fill = context)) +
geom_col() +
coord_flip() +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18))+
ylab("\n-log10(p)")+ xlab("")+ ylim(0,8)+
ggtitle("p values for strongest associations (log scale)")+
geom_text(aes(label=n_variants), position=position_stack(), hjust=-0.5)+
scale_fill_manual(values = c(red,yel,blu,gre))
print(p1)
catalog_matches[1:50,]
p1 <- catalog_matches[1:50,] |>
ggplot(aes(mapped_trait, log_10_p, fill = context)) +
geom_col() +
coord_flip() +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18))+
ylab("\n-log10(p)")+ xlab("")+ ylim(0,8)+
ggtitle("p values for strongest associations (log scale)")+
geom_text(aes(label=n_variants), position=position_stack(), hjust=-0.5)+
scale_fill_manual(values = c(red,yel,blu,gre))
print(p1)
p1 <- catalog_matches[1:50,] |>
ggplot(aes(mapped_trait, log_10_p, fill = context)) +
geom_col() +
coord_flip() +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18))+
ylab("\n-log10(p)")+ xlab("")+ ylim(0,8)+
ggtitle("p values for strongest associations (log scale)")+
geom_text(aes(label=log_10_p), position=position_stack(), hjust=-0.5)+
scale_fill_manual(values = c(red,yel,blu,gre))
print(p1)
catalog_matches[4:9,] |> gt() |> tab_header(title = "Examples of Catalog Matches")
p1 <- catalog_matches[1:50,] |>
ggplot(aes(mapped_trait, log_10_p, fill = context)) +
geom_col() +
coord_flip() +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18))+
ylab("\n-log10(p)")+ xlab("")+ ylim(0,8)+
ggtitle("p values for strongest associations (log scale)")+
geom_text(aes(label=log_10_p), position=position_stack(), hjust=-0.5)+
scale_fill_manual(values = c(red,yel,blu,gre))
print(p1)
catalog_matches[4:9,]
p1 <- catalog_matches[1:50,] |>
ggplot(aes(mapped_trait, log_10_p, fill = context)) +
geom_col() +
coord_flip() +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18))+
ylab("\n-log10(p)")+ xlab("")+
ggtitle("p values for strongest associations (log scale)")+
geom_text(aes(label=log_10_p), position=position_stack(), hjust=-0.5)+
scale_fill_manual(values = c(red,yel,blu,gre))
print(p1)
p1 <- catalog_matches[1:50,] |>
ggplot(aes(mapped_trait, log_10_p, fill = context)) +
geom_col() +
coord_flip() +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18))+
ylab("\n-log10(p)")+ xlab("")+
ggtitle("p values for strongest associations (log scale)")+
geom_text(aes(label=log_10_p), position=position_stack(), hjust=-0.5)+
scale_fill_manual(values = c(red,yel,blu,gre,org,lir,grb,gry))
print(p1)
p1 <- plot_table  |>
ggplot(aes(mapped_trait, log_10_p, fill = context)) +
geom_col() +
coord_flip() +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18))+
ylab("\n-log10(p)")+ xlab("")+
ggtitle("p values for strongest associations (log scale)")+
geom_text(aes(label=log_10_p), position=position_stack(), hjust=-0.5)+
scale_fill_manual(values = c(red,yel,blu,gre,org,lir,grb,gry))
plot_table <- catalog_matches |> arrange(or_or_beta) |> head(20)
p1 <- plot_table  |>
ggplot(aes(mapped_trait, log_10_p, fill = context)) +
geom_col() +
coord_flip() +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18))+
ylab("\n-log10(p)")+ xlab("")+
ggtitle("p values for strongest associations (log scale)")+
geom_text(aes(label=log_10_p), position=position_stack(), hjust=-0.5)+
scale_fill_manual(values = c(red,yel,blu,gre,org,lir,grb,gry))
print(p1)
plot_table
plot_table <- filter(catalog_matches, str_detect(mapped_trait, "cancer")) |> head(20)
p1 <- plot_table  |>
ggplot(aes(mapped_trait, log_10_p, fill = context)) +
geom_col() +
coord_flip() +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18))+
ylab("\n-log10(p)")+ xlab("")+
ggtitle("p values for strongest associations (log scale)")+
geom_text(aes(label=log_10_p), position=position_stack(), hjust=-0.5)+
scale_fill_manual(values = c(red,yel,blu,gre,org,lir,grb,gry))
print(p1)
plot_table
plot_table <- filter(catalog_matches, str_detect(disease_trait, "cancer")) |> head(20)
p1 <- plot_table  |>
ggplot(aes(disease_trait, log_10_p, fill = context)) +
geom_col() +
coord_flip() +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18))+
ylab("\n-log10(p)")+ xlab("")+
ggtitle("p values for strongest associations (log scale)")+
geom_text(aes(label=log_10_p), position=position_stack(), hjust=-0.5)+
scale_fill_manual(values = c(red,yel,blu,gre,org,lir,grb,gry))
print(p1)
filter(catalog_matches, str_detect(disease_trait, "cancer"))
filter(catalog_matches, str_detect(disease_trait, "cancer")) |> pull(disease_trait)
p1 <- catalog_matches |>
ggplot(aes(p_value)) +
geom_histogram() +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18))
print(p1)
p1 <- catalog_matches |>
ggplot(aes(frequency)) +
geom_histogram() +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18))
print(p1)
catalog_matches
p1 <- catalog_matches |>
ggplot(aes(risk_allele_frequency)) +
geom_histogram() +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18))
print(p1)
p1 <- catalog_matches |>
ggplot(aes(risk_allele_frequency)) +
geom_histogram(bins = 100) +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18)) +
xlim(0,0.5)
print(p1)
p1 <- catalog_matches |>
ggplot(aes(risk_allele_frequency)) +
geom_histogram(bins = 100) +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18)) +
xlim(0,1)
print(p1)
p1 <- catalog_matches |>
ggplot(aes(risk_allele_frequency)) +
geom_histogram(bins = 100) +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18)) +
xlim(0,1) +
geom_vline(xintercept = 0.01)
print(p1)
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
#setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
#KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
setwd("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/")
KnitPost("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/fun_projects.Rmd")
p1 <- catalog_matches |>
ggplot(aes(risk_allele_frequency)) +
geom_histogram(bins = 100) +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18)) +
xlim(0,1) +
ggtitle("Distribution of risk allele frequencies")
print(p1)
start_time <- Sys.time()
library(gwascat)
library(snakecase)
suppressPackageStartupMessages(library(tidyverse))
library(gt)
# Wong, B. Points of view: Color blindness. Nat Methods (2011).
bla <- '#000000'
blu <- '#0072b2'
grb <- '#56b4e9'
lir <- '#cc79a7'
gre <- '#009e73'
red <- '#d55e00'
org <- '#e69f00'
yel <- '#f0e442'
gry <- '#BBBBBB'
make.hyperlink <-  function(myurl,mytext=myurl) {
paste('<a href="',myurl,'">',mytext,'</a>')
}
myVariants_path <- "C:/Users/jmcgirr/dna/nebula/vcf/myVariants.txt"
# Nebula vcf
vcf <- read_tsv(myVariants_path, col_select = c("CHROM","POS","TYPE","ID","myVariants.GT")) |>
# only check SNPs
filter(TYPE == "SNP") |> select(-c(TYPE)) |>
separate(myVariants.GT, c("vcf_allele1","vcf_allele2"), sep = "/|\\|") |>
# remove deletions labeled as "*"
filter(vcf_allele1 != "*",vcf_allele2 != "*") |>
# remove rows with missing rsid
filter(str_detect(ID,fixed("rs")))
head(as.data.frame(vcf))
gwtrunc <- makeCurrentGwascat()
#topTraits(gwtrunc)
catalog_matches <-  as.data.frame(gwtrunc) |>
filter(SNPS %in% vcf$ID) |>
select(-c(DATE.ADDED.TO.CATALOG, FIRST.AUTHOR, width, STUDY, REGION, CHR_ID,
UPSTREAM_GENE_ID, DOWNSTREAM_GENE_ID, SNP_GENE_IDS, UPSTREAM_GENE_DISTANCE,
DOWNSTREAM_GENE_DISTANCE,MERGED, SNP_ID_CURRENT,PVALUE_MLOG,PLATFORM..SNPS.PASSING.QC.,
STUDY.ACCESSION,P.VALUE..TEXT.,PUBMEDID)) |>
separate(STRONGEST.SNP.RISK.ALLELE, c("STRONGEST_SNP","RISK_ALLELE"), sep = "-" ,remove = TRUE) |>
select(-c(STRONGEST_SNP)) |>
arrange(P.VALUE) |>
inner_join(vcf, by = c("SNPS" = "ID"))
names(catalog_matches) <- to_snake_case(names(catalog_matches))
match_stats <- data.frame(column = c("rsIDs",
"phenotypes",
"journals"),
n = c(length(unique(catalog_matches$snps)),
length(unique(catalog_matches$mapped_trait)),
length(unique(catalog_matches$journal))))
match_stats |> gt() |> tab_header(title = "Catalog Matches")
catalog_matches[4:9,] |> gt() |> tab_header(title = "Examples of Catalog Matches")
homozygous_for_risk_allele <- filter(catalog_matches,vcf_allele_1 == risk_allele, vcf_allele_2 == risk_allele, p_value < 1e-20) |>
arrange(risk_allele_frequency, p_value)
homozygous_for_risk_allele_low_freq <- filter(catalog_matches,vcf_allele_1 == risk_allele, vcf_allele_2 == risk_allele, risk_allele_frequency < 0.1, p_value < 1e-20) |>
arrange(p_value) |>
select(c(disease_trait, p_value, or_or_beta, risk_allele, snps, link))
p1 <- catalog_matches |>
ggplot(aes(risk_allele_frequency)) +
geom_histogram(bins = 100) +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18)) +
xlim(0,1) +
ggtitle("Distribution of risk allele frequencies")
print(p1)
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
#setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
#KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
setwd("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/")
KnitPost("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
#setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
#KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
setwd("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/")
KnitPost("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
#setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
#KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
setwd("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/")
KnitPost("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
#setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
#KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
setwd("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/")
KnitPost("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/fun_projects.Rmd")
p1 <- catalog_matches |>
ggplot(aes(risk_allele_frequency)) +
geom_histogram(bins = 100) +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18)) +
xlim(0,1) +
ggtitle("Distribution of risk allele frequencies") +
geom_vline(xintercept = 0.01)
print(p1)
p1 <- catalog_matches |>
ggplot(aes(risk_allele_frequency)) +
geom_histogram(bins = 100) +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18)) +
xlim(0,1) +
ggtitle("Distribution of risk allele frequencies") +
geom_vline(xintercept = 0.1, color = red)
print(p1)
p1 <- catalog_matches |>
ggplot(aes(risk_allele_frequency)) +
geom_histogram(bins = 100) +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18)) +
xlim(0,1) +
ggtitle("Distribution of risk allele frequencies") +
geom_vline(xintercept = 0.1, color = red, line_type = 2)
p1 <- catalog_matches |>
ggplot(aes(risk_allele_frequency)) +
geom_histogram(bins = 100) +
theme_minimal() +
theme(axis.title.x=element_text(size=14),
axis.title.y=element_text(size=12),
axis.title=element_text(size=14),
axis.text=element_text(size=12),
plot.title=element_text(size=18)) +
xlim(0,1) +
ggtitle("Distribution of risk allele frequencies") +
geom_vline(xintercept = 0.1, color = red, linetype = 2)
print(p1)
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
#setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
#KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
setwd("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/")
KnitPost("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
#setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
#KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
setwd("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/")
KnitPost("C:/Users/jmcgirr/Documents/GitHub/my_website/_pages/fun_projects.Rmd")
