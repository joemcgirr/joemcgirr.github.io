}
# need to pause execution between artists to avoid rate limit enforced by API (error 429)
# pause 31 seconds
Sys.sleep(31)
}
return(na.omit(unlist(tracks_for_playlist)))
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Add tracks to a new playlist -------------------------------------------------
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
add.tracks.to.new.playlist <- function(tracks_for_playlist, playlist_name, playlist_description){
# get all playlists to make sure the playlist name is not duplicated
my_playlists <- get.all.my.playlists()
if(playlist_name %in% my_playlists$name){stop("Playlist name is already in my playlists")}
create_playlist("joemcg318",
playlist_name,
description = playlist_description,
authorization = auth_object)
# get all playlists which now include newly created playlist
my_playlists <- get.all.my.playlists()
# max number of tracks you can add at once is 100
n_tracks <- length(tracks_for_playlist)
if(n_tracks < 100){
add_tracks_to_playlist(filter(my_playlists, name == playlist_name)$id,
tracks_for_playlist,
authorization = auth_object)
}else{
track_batches <-  split(tracks_for_playlist, ceiling(seq_along(tracks_for_playlist)/100))
for(i in c(1:length(track_batches)))
add_tracks_to_playlist(filter(my_playlists, name == playlist_name)$id,
track_batches[[i]],
authorization = auth_object)
}
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Top tracks playlists ---------------------------------------------------------
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
create.top.tracks.playlist <- function(artist_ids, playlist_name, playlist_description = NULL, n_tracks_per_artist = 10){
tracks_for_playlist <- find.top.tracks(artist_ids, n_tracks_per_artist)
add.tracks.to.new.playlist(tracks_for_playlist, playlist_name, playlist_description)
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Tempo playlists ---------------------------------------------------------
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
create.tempo.playlist <- function(artist_ids, playlist_name, playlist_description = NULL, tempo_range, n_tracks_per_artist = 10){
tracks_for_playlist <- find.tempo.tracks(artist_ids, tempo_range, n_tracks_per_artist)
add.tracks.to.new.playlist(tracks_for_playlist, playlist_name, playlist_description)
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Get Spotify Artist IDs -------------------------------------------------------
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
get.spotify.artist.ids <- function(artists_for_playlist){
artists_for_playlist <- toupper(artists_for_playlist)
spotify_artist_id <- vector("character", length(artists_for_playlist))
for(i in seq_along(artists_for_playlist)){
i_search_spotify <- search_spotify(artists_for_playlist[i])
if(artists_for_playlist[i] %in% toupper(i_search_spotify$artists$items$name)){
exact_artist_name_match <- which(toupper(i_search_spotify$artists$items$name) == artists_for_playlist[i])[1]
spotify_artist_id[[i]] <- i_search_spotify$artists$items$id[exact_artist_name_match]
}else{
spotify_artist_id[[i]] <- NA
cat(paste0("\nNo exact match for artist name: ",artists_for_playlist[i], "\n\n"))
# 					 "\n", "Using: ", i_search_spotify$artists$items$name[1],
# 					 "\n", i_search_spotify$artists$items$external_urls.spotify[1], "\n\n"))
# spotify_artist_id[[i]] <- i_search_spotify$artists$items$id[1]
# cat(paste0("\nNo exact match for artist name: ",edc_artists$artist[i],
# 					 "\n", "Using: ", i_search_spotify$artists$items$name[1],
# 					 "\n", i_search_spotify$artists$items$external_urls.spotify[1], "\n\n"))
}
}
artists <- tibble(artist = artists_for_playlist,
artist_id = spotify_artist_id)
return(artists)
}
create.top.tracks.playlist(artists$artist_id,
"JAM Game Night - Indie Rock",
playlist_description = "25 artists. 5 most popular tracks from each artist.",
n_tracks_per_artist = 5)
beepr::beep()
artists_for_playlist <- c(
"Glass Animals",
"Sylvan Esso",
"Twenty One Pilots",
"Young the Giant",
"Mt. Joy",
"red hot chili peppers",
"Cage the Elephant",
"Tame Impala",
"local natives",
"arctic monkeys",
"panic! at the disco",
"green day",
"Foo Fighters",
"chvrches",
"beck",
"vampire weekend",
"alabama shakes",
"sublime",
"weezer",
"gorillaz",
"the killers",
"foster the people",
"cake",
"misterwives",
"phoenix",
"taylor swift",
"MGMT",
"the strokes",
"two door cinema club"
)
artists <- get.spotify.artist.ids(artists_for_playlist)
artists
artists_for_playlist <- c(
"Glass Animals",
"Sylvan Esso",
"Twenty One Pilots",
"Young the Giant",
"Mt. Joy",
"red hot chili peppers",
"Cage the Elephant",
"Tame Impala",
"local natives",
"arctic monkeys",
"panic! at the disco",
"green day",
"Foo Fighters",
"chvrches",
"beck",
"vampire weekend",
"alabama shakes",
"sublime",
"weezer",
"gorillaz",
"the killers",
"foster the people",
"cake",
"misterwives",
"phoenix",
"taylor swift",
"MGMT",
"the strokes",
"two door cinema club",
"cold war kids",
"arcade fire",
"haim",
"amy winehouse",
"hot chip",
"lcd soundsystem"
)
artists <- get.spotify.artist.ids(artists_for_playlist)
create.top.tracks.playlist(artists$artist_id,
"JAM Game Night",
playlist_description = "35 artists. 5 most popular tracks from each artist.",
n_tracks_per_artist = 5)
beepr::beep()
artists_for_playlist <- c(
#"Louis the Child",
"Griz",
"Pretty Lights",
"ODESZA",
"Flume",
"Zedd",
"daft punk",
#"virtual riot",
"skrillix",
"allison wonderland",
"gryffin",
"sofi tucker",
#"zeds dead",
#"subtronics",
# "flux pavillion",
"kygo",
"deadmau5"
)
artists <- get.spotify.artist.ids(artists_for_playlist)
artists_for_playlist <- c(
#"Louis the Child",
"Griz",
"Pretty Lights",
"ODESZA",
"Flume",
"Zedd",
"daft punk",
#"virtual riot",
"skrillix",
"allison wonderland",
"gryffin",
"sofi tukker",
#"zeds dead",
#"subtronics",
# "flux pavillion",
"kygo",
"deadmau5"
)
artists <- get.spotify.artist.ids(artists_for_playlist)
create.top.tracks.playlist(artists$artist_id,
"JAM Game Night - EDM",
playlist_description = "5 most popular tracks from each artist for 12 selected artists and a sprinkling from others.",
n_tracks_per_artist = 5)
Sys.setenv(SPOTIFY_CLIENT_ID = '1e59005821c3454182d71828b4c4d079')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '6b0652742211490e85c78715f45c0814')
Sys.setenv(SPOTIFY_CLIENT_ID = '932248b708d74f63a1ce6be0922376a2')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '712b750a7b6443c2bb66485f9cd8e8a6')
#library(spotifyr)
# set up a dev account to get valid API IDs
# Sys.setenv(SPOTIFY_CLIENT_ID = '########################')
# Sys.setenv(SPOTIFY_CLIENT_SECRET = '#########################')
access_token <- get_spotify_access_token()
#https://github.com/charlie86/spotifyr/issues/198
valid_scopes <- scopes()[!scopes() %in% c("user-soa-link", "user-soa-unlink", "user-manage-entitlements", "user-manage-partner", "user-create-partner")]
valid_scopes <- scopes()[c(7,8,9,10,16,17,19)]
auth_object <- get_spotify_authorization_code(scope = valid_scopes)
artists
artists_for_playlist <- c(
#"Louis the Child",
"Griz",
"Pretty Lights",
"ODESZA",
"Flume",
"Zedd",
"daft punk",
#"virtual riot",
"skrillix",
"allison wonderland",
"gryffin",
"sofi tukker",
#"zeds dead",
#"subtronics",
# "flux pavillion",
"kygo",
"deadmau5",
"LSDream"
)
artists <- get.spotify.artist.ids(artists_for_playlist)
create.top.tracks.playlist(artists$artist_id,
"JAM Game Night - EDM",
playlist_description = "5 most popular tracks from each artist for 12 selected artists and a sprinkling from others.",
n_tracks_per_artist = 5)
create.top.tracks.playlist(artists$artist_id,
"JAM Game Night - EDM",
playlist_description = "5 most popular tracks from each artist for 12 selected artists and a sprinkling from others.",
n_tracks_per_artist = 5)
artist_ids <- artists$artist_id
tracks_for_playlist <- vector("list", length(artist_ids))
for(i in seq_along(artist_ids)){
#track_info <- get_artist_audio_features(artist_ids[i], include_groups = c("album", "single"))
top_tracks <- get_artist_top_tracks(artist_ids[i])
tracks_for_playlist[[i]] <- top_tracks$uri[1:n_tracks_per_artist]
}
n_tracks_per_artist = 10
for(i in seq_along(artist_ids)){
#track_info <- get_artist_audio_features(artist_ids[i], include_groups = c("album", "single"))
top_tracks <- get_artist_top_tracks(artist_ids[i])
tracks_for_playlist[[i]] <- top_tracks$uri[1:n_tracks_per_artist]
}
i
start_time <- Sys.time()
#suppressPackageStartupMessages(library(ggpath))
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(tidyverse))
options(scipen = 10L)
jam_theme <-  theme_minimal() +
theme(text=element_text(size=14),
axis.text=element_text(size=12),
axis.title.y = element_text(margin = margin(t = 0, r = 8, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 0, r = 0, b = 8, l = 0)))
jam_theme <-  theme_minimal() +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 8, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 0, r = 0, b = 8, l = 0)),
text=element_text(size=20, face="bold", color="white"),
axis.text.x=element_text(size=10, color="white"),
axis.text.y=element_text(size=13, color="white"),
plot.title=element_text(face="bold", color="white"),
plot.background = element_rect(fill = "#5E61AF"),
plot.margin = margin(1,1,1.5,1.2, "cm"))
# Create color pallete based on lineup image @ https://coolors.co/image-picker
my_cols <- c("#52BFEC","#AA1880","#EC0059","#08BCDF","#4C1064", "#FF00BC", "#2249CD","#53007D", "#FF6B02","#B319B2","#EAE100", "#BF068F")
#install.packages("spotifyr")
#devtools::install_github('charlie86/spotifyr')
library(spotifyr)
access_token <- get_spotify_access_token()
Sys.setenv(SPOTIFY_CLIENT_ID = '1e59005821c3454182d71828b4c4d079')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '6b0652742211490e85c78715f45c0814')
Sys.setenv(SPOTIFY_CLIENT_ID = '932248b708d74f63a1ce6be0922376a2')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '712b750a7b6443c2bb66485f9cd8e8a6')
#library(spotifyr)
# set up a dev account to get valid API IDs
# Sys.setenv(SPOTIFY_CLIENT_ID = '########################')
# Sys.setenv(SPOTIFY_CLIENT_SECRET = '#########################')
access_token <- get_spotify_access_token()
#https://github.com/charlie86/spotifyr/issues/198
valid_scopes <- scopes()[!scopes() %in% c("user-soa-link", "user-soa-unlink", "user-manage-entitlements", "user-manage-partner", "user-create-partner")]
valid_scopes <- scopes()[c(7,8,9,10,16,17,19)]
auth_object <- get_spotify_authorization_code(scope = valid_scopes)
# i <- 1
# artists <- c("SUBTRONICS")
# artists <- c("DEADMAU5")
# create.discovery.playlist
# create.running.playlist
# related artists to artists I like that aren't attending
# network of collaborations
# artist_ids <- filter(edc_artists, artist %in% artists_i_know_i_like)$spotify_artist_id
# playlist_name <- "test_playlist"
# playlist_description = NULL
# n_tracks_per_artist = 10
# tempo_range = c(170,180)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Get my playlists -------------------------------------------------------------
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
get.all.my.playlists <- function(){
my_playlists <- tibble()
i_my_playlists <- tibble()
i_offset <- 0
while(!is.null(nrow(i_my_playlists))){
i_my_playlists <- get_user_playlists("joemcg318", offset = i_offset, limit = 50, authorization = auth_object)
my_playlists <- bind_rows(my_playlists, i_my_playlists)
i_offset <- i_offset + 50
}
return(my_playlists)
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Find tracks for playlist -----------------------------------------------------
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
find.top.tracks <- function(artist_ids, n_tracks_per_artist = 10){
tracks_for_playlist <- vector("list", length(artist_ids))
for(i in seq_along(artist_ids)){
#track_info <- get_artist_audio_features(artist_ids[i], include_groups = c("album", "single"))
top_tracks <- get_artist_top_tracks(artist_ids[i])
tracks_for_playlist[[i]] <- top_tracks$uri[1:n_tracks_per_artist]
}
return(unlist(tracks_for_playlist))
}
find.tempo.tracks <- function(artist_ids, tempo_range, n_tracks_per_artist = 10){
tracks_for_playlist <- vector("list", length(artist_ids))
for(i in seq_along(artist_ids)){
track_info <- get_artist_audio_features(artist_ids[i], include_groups = c("album", "single")) |>
# sort by energy metric to output songs with the most energy
arrange(energy) |>
filter(tempo >= tempo_range[1], tempo <= tempo_range[2])
if(nrow(track_info) >= n_tracks_per_artist){
tracks_for_playlist[[i]] <- track_info$track_uri[1:n_tracks_per_artist]
}
if(nrow(track_info) > 0 & nrow(track_info) < n_tracks_per_artist){
tracks_for_playlist[[i]] <- track_info$track_uri[1:nrow(track_info)]
warning(paste0("Only found ", nrow(track_info), " track(s) in the requested tempo range for artist: ", artist_ids[i]))
}
if(nrow(track_info) == 0){
tracks_for_playlist[[i]] <- NA
warning(paste0("No tracks in the requested tempo range for artist: ", artist_ids[i]))
}
# need to pause execution between artists to avoid rate limit enforced by API (error 429)
# pause 31 seconds
Sys.sleep(31)
}
return(na.omit(unlist(tracks_for_playlist)))
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Add tracks to a new playlist -------------------------------------------------
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
add.tracks.to.new.playlist <- function(tracks_for_playlist, playlist_name, playlist_description){
# get all playlists to make sure the playlist name is not duplicated
my_playlists <- get.all.my.playlists()
if(playlist_name %in% my_playlists$name){stop("Playlist name is already in my playlists")}
create_playlist("joemcg318",
playlist_name,
description = playlist_description,
authorization = auth_object)
# get all playlists which now include newly created playlist
my_playlists <- get.all.my.playlists()
# max number of tracks you can add at once is 100
n_tracks <- length(tracks_for_playlist)
if(n_tracks < 100){
add_tracks_to_playlist(filter(my_playlists, name == playlist_name)$id,
tracks_for_playlist,
authorization = auth_object)
}else{
track_batches <-  split(tracks_for_playlist, ceiling(seq_along(tracks_for_playlist)/100))
for(i in c(1:length(track_batches)))
add_tracks_to_playlist(filter(my_playlists, name == playlist_name)$id,
track_batches[[i]],
authorization = auth_object)
}
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Top tracks playlists ---------------------------------------------------------
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
create.top.tracks.playlist <- function(artist_ids, playlist_name, playlist_description = NULL, n_tracks_per_artist = 10){
tracks_for_playlist <- find.top.tracks(artist_ids, n_tracks_per_artist)
add.tracks.to.new.playlist(tracks_for_playlist, playlist_name, playlist_description)
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Tempo playlists ---------------------------------------------------------
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
create.tempo.playlist <- function(artist_ids, playlist_name, playlist_description = NULL, tempo_range, n_tracks_per_artist = 10){
tracks_for_playlist <- find.tempo.tracks(artist_ids, tempo_range, n_tracks_per_artist)
add.tracks.to.new.playlist(tracks_for_playlist, playlist_name, playlist_description)
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Get Spotify Artist IDs -------------------------------------------------------
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
get.spotify.artist.ids <- function(artists_for_playlist){
artists_for_playlist <- toupper(artists_for_playlist)
spotify_artist_id <- vector("character", length(artists_for_playlist))
for(i in seq_along(artists_for_playlist)){
i_search_spotify <- search_spotify(artists_for_playlist[i])
if(artists_for_playlist[i] %in% toupper(i_search_spotify$artists$items$name)){
exact_artist_name_match <- which(toupper(i_search_spotify$artists$items$name) == artists_for_playlist[i])[1]
spotify_artist_id[[i]] <- i_search_spotify$artists$items$id[exact_artist_name_match]
}else{
spotify_artist_id[[i]] <- NA
cat(paste0("\nNo exact match for artist name: ",artists_for_playlist[i], "\n\n"))
# 					 "\n", "Using: ", i_search_spotify$artists$items$name[1],
# 					 "\n", i_search_spotify$artists$items$external_urls.spotify[1], "\n\n"))
# spotify_artist_id[[i]] <- i_search_spotify$artists$items$id[1]
# cat(paste0("\nNo exact match for artist name: ",edc_artists$artist[i],
# 					 "\n", "Using: ", i_search_spotify$artists$items$name[1],
# 					 "\n", i_search_spotify$artists$items$external_urls.spotify[1], "\n\n"))
}
}
artists <- tibble(artist = artists_for_playlist,
artist_id = spotify_artist_id)
return(artists)
}
artists_for_playlist <- c(
#"Louis the Child",
"Griz",
"Pretty Lights",
"ODESZA",
"Flume",
"Zedd",
"daft punk",
#"virtual riot",
"skrillix",
"allison wonderland",
"gryffin",
"sofi tukker",
#"zeds dead",
#"subtronics",
# "flux pavillion",
"kygo",
"deadmau5",
"LSDream"
)
artists <- get.spotify.artist.ids(artists_for_playlist)
artists
create.top.tracks.playlist(artists$artist_id,
"JAM Game Night - EDM",
playlist_description = "5 most popular tracks from each artist for 12 selected artists and a sprinkling from others.",
n_tracks_per_artist = 5)
create.top.tracks.playlist(artists$artist_id,
"JAM Game Night - EDM",
playlist_description = "5 most popular tracks from each artist for 12 selected artists and a sprinkling from others.",
n_tracks_per_artist = 5)
tracks_for_playlist <- find.top.tracks(artists$artist_ids, 5)
artists$artist_ids
artists
tracks_for_playlist <- find.top.tracks(artists$artist_id, 5)
tracks_for_playlist
artists_for_playlist <- c(
#"Louis the Child",
"Griz",
"Pretty Lights",
"ODESZA",
"Flume",
"Zedd",
"daft punk",
#"virtual riot",
"skrillex",
"allison wonderland",
"gryffin",
"sofi tukker",
#"zeds dead",
#"subtronics",
# "flux pavillion",
"kygo",
"deadmau5",
"LSDream"
)
artists <- get.spotify.artist.ids(artists_for_playlist)
create.top.tracks.playlist(artists$artist_id,
"JAM Game Night - EDM",
playlist_description = "5 most popular tracks from each artist for 12 selected artists and a sprinkling from others.",
n_tracks_per_artist = 5)
artists
create.top.tracks.playlist(artists$artist_id,
"JAM Game Night - EDM",
playlist_description = "5 most popular tracks from each artist for 12 selected artists and a sprinkling from others.",
n_tracks_per_artist = 5)
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/about.Rmd")
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/about.Rmd")
