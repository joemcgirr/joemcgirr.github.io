filter(!grepl("NoCall", CN_State)) %>%
filter(CN_State < 4, CN_State_truth < 4) %>%
select("cel_files","affymetrix.plate.barcode","CN_Region","CN_State","CN_State_truth") %>%
mutate(CNcalls.vs.truth = as.numeric(CN_State_truth) - as.numeric(CN_State)) %>%
filter(affymetrix.plate.barcode %in% opt$plates)
}
hapmap_concordance <- cn_truth %>% group_by(CN_Region) %>%
summarize(n = n(),
concordant_calls_plate_region = sum(CNcalls.vs.truth == 0, na.rm = T),
discordant_calls_plate_region = sum(CNcalls.vs.truth != 0, na.rm = T),
percent_concordance_region = round((sum(CNcalls.vs.truth == 0, na.rm = T) / n()) * 100, 2),
.groups = "drop")
print(as.data.frame(hapmap_concordance))
# sensitivity, specificity, ppv, and npv
i_region <- "CYP2D6_exon9"
print("columns = truth")
print("rows = observed")
print("")
# print 4x4 tables
for(i_region in unique(cn_truth$CN_Region)){
concordance_table <- filter(cn_truth, CN_Region == i_region)
performance_table <- data.frame(CN0=numeric(0),CN1=numeric(0),CN2=numeric(0),CN3=numeric(0))
for(i_CN_State in c(0:3)){
CN0_calledCNx <- nrow(filter(concordance_table, CN_State_truth == 0, CN_State == i_CN_State))
CN1_calledCNx <- nrow(filter(concordance_table, CN_State_truth == 1, CN_State == i_CN_State))
CN2_calledCNx <- nrow(filter(concordance_table, CN_State_truth == 2, CN_State == i_CN_State))
CN3_calledCNx <- nrow(filter(concordance_table, CN_State_truth == 3, CN_State == i_CN_State))
output <- data.frame(CN0=CN0_calledCNx,CN1=CN1_calledCNx,CN2=CN2_calledCNx,CN3=CN3_calledCNx)
performance_table <- bind_rows(performance_table,output)
}
row.names(performance_table) <- c("CN0","CN1","CN2","CN3")
print(i_region)
print(performance_table)
}
# calculate performance metrics per CN_State per region
performance_table <- data.frame(CN_Region=character(0),CN_State=numeric(0),samples=numeric(0),samples_expected_CN=numeric(0),samples_observed_CN=numeric(0),sensitivity=numeric(0),specificity=numeric(0),PPV=numeric(0),NPV=numeric(0))
for(i_region in unique(cn_truth$CN_Region)){
concordance_table <- filter(cn_truth, CN_Region == i_region)
for(i_CN_State in c(0:3)){
n_samples             <- nrow(concordance_table)
n_samples_expected_CN <- nrow(filter(concordance_table, CN_State_truth == i_CN_State))
n_samples_observed_CN <- nrow(filter(concordance_table, CN_State == i_CN_State))
CNx_calledCNx       <- nrow(filter(concordance_table, CN_State_truth == i_CN_State, CN_State == i_CN_State)) #TP
notCNx_calledCNx    <- nrow(filter(concordance_table, CN_State_truth != i_CN_State, CN_State == i_CN_State)) #FP
CNx_notcalledCNx    <- nrow(filter(concordance_table, CN_State_truth == i_CN_State, CN_State != i_CN_State)) #FN
notCNx_notcalledCNx <- nrow(filter(concordance_table, CN_State_truth != i_CN_State, CN_State != i_CN_State)) #TN
sensitivity <- CNx_calledCNx/((CNx_calledCNx+CNx_notcalledCNx))
specificity <- notCNx_notcalledCNx/((notCNx_notcalledCNx+notCNx_calledCNx))
ppv <- CNx_calledCNx/((CNx_calledCNx+notCNx_calledCNx))
npv <- notCNx_notcalledCNx/((notCNx_notcalledCNx+CNx_notcalledCNx))
if(n_samples_expected_CN > min_count_expected){
output <- data.frame(CN_Region=i_region,CN_State=i_CN_State,
samples=n_samples,samples_expected_CN=n_samples_expected_CN,samples_observed_CN=n_samples_observed_CN,
sensitivity=sensitivity,specificity=specificity,PPV=ppv,NPV=npv)
performance_table <- bind_rows(performance_table,output)
}else{
output <- data.frame(CN_Region=i_region,CN_State=i_CN_State,
samples=n_samples,samples_expected_CN=n_samples_expected_CN,samples_observed_CN=n_samples_observed_CN,
sensitivity=NA,specificity=NA,PPV=NA,NPV=NA)
performance_table <- bind_rows(performance_table,output)
}
}
}
hapmap_concordance1 <- select(hapmap_concordance,c(CN_Region,percent_concordance_region)) %>% rename(concordance_all_CN_States= percent_concordance_region)
performance_table  <- left_join(performance_table,hapmap_concordance1, by = c("CN_Region"))
print(performance_table)
suppressPackageStartupMessages(library(optparse))
option_list <- list (
### Paths
make_option (c("--fixed_cn_region_calls_file"),
help="Required path to .cnregioncalls.txt (Reported CN_State for each sample and fixed genomic region)"),
make_option (c("--samplenamelookup_file"),
help="Optional path to SampleNameLookup.txt (A lookup table mapping a CEL filename to a matching Sample identifier that may appear in refcalls_file)"),
make_option (c("--refcalls_file"),
help="Optional path to .cn_region_refcalls (Reference for samples with known CN_State)"),
make_option (c("--plates"),
help="Optional comma delimited list of affymetrix.plate.barcodes to be analyzed. In quotes like \"5510594405548020622130\",\"5510594405548020622131\""),
make_option (c("--out_dir"),
help="Optional path to write outputs. Default is current directory")
)
opt  <- parse_args(
OptionParser(#usage= "usage: %prog [options]",
option_list=option_list)
)
# output directory
if (is.null(opt$out_dir)) {
opt$out_dir <- "./"
# print(opt$out1)
}
if (!is.null(opt$out_dir)) {
if (substr(opt$out_dir, nchar(opt$out_dir), nchar(opt$out_dir)) != "/") {
# print(substr(opt$out, nchar(opt$out),nchar(opt$out)))
opt$out_dir <- paste(opt$out_dir, "/", sep = "")
}
else {
opt$out_dir <- opt$out_dir
}
}
print(paste("outdir =",opt$out_dir))
library(tidyverse)
# Wong, B. Points of view: Color blindness. Nat Methods (2011).
bla <- '#000000'
blu <- '#0072b2'
grb <- '#56b4e9'
lir <- '#cc79a7'
gre <- '#009e73'
red <- '#d55e00'
org <- '#e69f00'
yel <- '#f0e442'
gry <- '#BBBBBB'
opt$fixed_cn_region_calls_file <- "Q:/Emeryville/Cyto2/AxiomCNV/Ginsu/analysis/30_waves/0_waves/AxiomCNVMix.cnregioncalls.txt"
opt$samplenamelookup_file      <- "C:/Users/joseph.mcgirr/Desktop/SampleNameLookup.txt"
opt$refcalls_file              <- "C:/Users/joseph.mcgirr/OneDrive - Thermo Fisher Scientific/Documents/proj/ginsu/vlad_testing/lib/HapMapTruth_ChimericRegions_20220119.txt"
opt$out_dir                    <- "C:/Users/joseph.mcgirr/Desktop/temp/"
fixed_cn_region_calls      <- read.delim(opt$fixed_cn_region_calls_file, comment.char = "#", colClasses = c("affymetrix.plate.barcode"="character"))
samplenamelookup <- read.delim(opt$samplenamelookup_file, comment.char = "#")
names(samplenamelookup) <- c("cel_files", "Sample")
if(any(grepl("CEL" , samplenamelookup$cel_files)) == FALSE){
samplenamelookup$cel_files <- paste(samplenamelookup$cel_files, ".CEL", sep = "")
}
refcalls <- read.delim(opt$refcalls_file, comment.char = "#") %>%
na.omit(refcalls) %>% filter(CN_State != "DoNotUse", !grepl("or",CN_State)) #%>% filter(Population != "Unknown")
# If less min_count_expected samples with expected CN state, then metrics are not calculated.
min_count_expected <- 3
cn_truth <- inner_join(samplenamelookup,refcalls, by =c("Sample")) %>% rename(CN_State_truth = CN_State)
if(is.null(opt$plates)){
cn_truth <- inner_join(fixed_cn_region_calls,cn_truth, by =c("cel_files", "CN_Region")) %>%
filter(!grepl("NoCall", CN_State)) %>%
filter(CN_State < 4, CN_State_truth < 4) %>%
select("cel_files","affymetrix.plate.barcode","CN_Region","CN_State","CN_State_truth") %>%
mutate(CNcalls.vs.truth = as.numeric(CN_State_truth) - as.numeric(CN_State))
}else{
cn_truth <- inner_join(fixed_cn_region_calls,cn_truth, by =c("cel_files", "CN_Region")) %>%
filter(!grepl("NoCall", CN_State)) %>%
filter(CN_State < 4, CN_State_truth < 4) %>%
select("cel_files","affymetrix.plate.barcode","CN_Region","CN_State","CN_State_truth") %>%
mutate(CNcalls.vs.truth = as.numeric(CN_State_truth) - as.numeric(CN_State)) %>%
filter(affymetrix.plate.barcode %in% opt$plates)
}
hapmap_concordance <- cn_truth %>% group_by(CN_Region) %>%
summarize(n = n(),
concordant_calls_plate_region = sum(CNcalls.vs.truth == 0, na.rm = T),
discordant_calls_plate_region = sum(CNcalls.vs.truth != 0, na.rm = T),
percent_concordance_region = round((sum(CNcalls.vs.truth == 0, na.rm = T) / n()) * 100, 2),
.groups = "drop")
print(as.data.frame(hapmap_concordance))
opt$plates <- "5510594405548020622130"
# If less min_count_expected samples with expected CN state, then metrics are not calculated.
min_count_expected <- 3
cn_truth <- inner_join(samplenamelookup,refcalls, by =c("Sample")) %>% rename(CN_State_truth = CN_State)
if(is.null(opt$plates)){
cn_truth <- inner_join(fixed_cn_region_calls,cn_truth, by =c("cel_files", "CN_Region")) %>%
filter(!grepl("NoCall", CN_State)) %>%
filter(CN_State < 4, CN_State_truth < 4) %>%
select("cel_files","affymetrix.plate.barcode","CN_Region","CN_State","CN_State_truth") %>%
mutate(CNcalls.vs.truth = as.numeric(CN_State_truth) - as.numeric(CN_State))
}else{
cn_truth <- inner_join(fixed_cn_region_calls,cn_truth, by =c("cel_files", "CN_Region")) %>%
filter(!grepl("NoCall", CN_State)) %>%
filter(CN_State < 4, CN_State_truth < 4) %>%
select("cel_files","affymetrix.plate.barcode","CN_Region","CN_State","CN_State_truth") %>%
mutate(CNcalls.vs.truth = as.numeric(CN_State_truth) - as.numeric(CN_State)) %>%
filter(affymetrix.plate.barcode %in% opt$plates)
}
hp1 <- hapmap_concordance
hapmap_concordance <- cn_truth %>% group_by(CN_Region) %>%
summarize(n = n(),
concordant_calls_plate_region = sum(CNcalls.vs.truth == 0, na.rm = T),
discordant_calls_plate_region = sum(CNcalls.vs.truth != 0, na.rm = T),
percent_concordance_region = round((sum(CNcalls.vs.truth == 0, na.rm = T) / n()) * 100, 2),
.groups = "drop")
print(as.data.frame(hapmap_concordance))
print(as.data.frame(hp1))
library(tidyverse)
reports      <- data.frame()
concordances <- data.frame()
for (waves in c(0,1,5,10,15,20,25,30)){
report_file                <- paste("Q:/Emeryville/Cyto2/AxiomCNV/Ginsu/analysis/30_waves/",waves,"_waves/AxiomCNVMix.report.txt", sep = "")
concordance_file           <- paste("Q:/Emeryville/Cyto2/AxiomCNV/Ginsu/analysis/30_waves/",waves,"_waves/concordance_performance.txt", sep = "")
#fixed_cn_region_calls_file <- paste("Q:/Emeryville/Cyto2/AxiomCNV/Ginsu/analysis/30_waves/",waves,"_waves/AxiomCNVMix.cnregioncalls.txt", sep = "")
report                <- read.delim(report_file               , comment.char = "#", colClasses = c("affymetrix.plate.barcode"="character"))
concordance           <- read.delim(concordance_file          , comment.char = "#")
#fixed_cn_region_calls <- read.delim(fixed_cn_region_calls_file, comment.char = "#", colClasses = c("affymetrix.plate.barcode"="character"))
report$waves      <- waves
concordance$waves <- waves
reports      <- bind_rows(reports,report)
concordances <- bind_rows(concordances,concordance)
}
head(reports)
head(concordances)
rep <- reports
rep$waves <- as.character(rep$waves)
rep$waves <- factor(rep$waves,levels = c("0","1","5","10","15","20","25","30"))
concordances$waves <- as.character(concordances$waves)
concordances$waves <- factor(concordances$waves,levels = c("0","1","5","10","15","20","25","30"))
concordances$CN_State <- as.character(concordances$CN_State)
concordances$CN_State <- factor(concordances$CN_State,levels = c("0","1","2","3"))
con <- concordances %>% select(c(CN_Region,concordance_all_CN_States,waves)) %>% unique()
con$waves <- as.character(con$waves)
con$waves <- factor(con$waves,levels = c("0","1","5","10","15","20","25","30"))
head(rep)
rep <- filter(rep, affy.metrix.barcode == "5510594405548020622130")
rep <- filter(rep, affymetrix.plate.barcode == "5510594405548020622130")
p1 <- rep %>%
ggplot(aes(waves, MAPD)) +
geom_boxplot()+
xlab("\nwaves")+ylab("MAPD\n")+
theme_minimal()
print(p1)
p1 <- rep %>%
ggplot(aes(waves, WavinessSD)) +
geom_boxplot()+
xlab("\nwaves")+ylab("WavinessSD\n")+
theme_minimal()
print(p1)
library(IRanges)
library(tidyverse)
# Wong, B. Points of view: Color blindness. Nat Methods (2011).
bla <- '#000000'
blu <- '#0072b2'
grb <- '#56b4e9'
lir <- '#cc79a7'
gre <- '#009e73'
red <- '#d55e00'
org <- '#e69f00'
yel <- '#f0e442'
gry <- '#BBBBBB'
my_cols <- c(blu,red,gry,gre,org,grb,lir,gry)
gear <- read.delim("https://github.com/joemcgirr/rock_climbing/raw/master/trad_rack/placements.txt")
gear$min <- gear$min * 10
gear <- read.delim("https://raw.githubusercontent.com/joemcgirr/rock_climbing/main/trad_rack/placements.txt")
gear$min <- gear$min * 10
gear$max <- gear$max * 10
gear$width <- gear$max - gear$min
gear$brand_model <- paste(gear$brand, gear$model, sep = " / ")
gear$brand_model_type <- paste(gear$brand, gear$model, gear$type, sep = " / ")
gear$size <- as.character(gear$size)
gear
library(IRanges)
library(tidyverse)
# Wong, B. Points of view: Color blindness. Nat Methods (2011).
bla <- '#000000'
blu <- '#0072b2'
grb <- '#56b4e9'
lir <- '#cc79a7'
gre <- '#009e73'
red <- '#d55e00'
org <- '#e69f00'
yel <- '#f0e442'
gry <- '#BBBBBB'
my_cols <- c(blu,red,gry,gre,org,grb,lir,gry)
gear <- read.delim("https://raw.githubusercontent.com/joemcgirr/rock_climbing/main/trad_rack/placements.txt")
gear$min <- gear$min * 10
gear$max <- gear$max * 10
gear$width <- gear$max - gear$min
gear$brand_model <- paste(gear$brand, gear$model, sep = " / ")
gear$brand_model_type <- paste(gear$brand, gear$model, gear$type, sep = " / ")
gear$size <- as.character(gear$size)
gear$color_code <-  str_replace_all(gear$color_code,"bla","#BBBBBB")
gear$color_code <-  str_replace_all(gear$color_code,"blu","#0072b2")
gear$color_code <-  str_replace_all(gear$color_code,"grb","#56b4e9")
gear$color_code <-  str_replace_all(gear$color_code,"lir","#cc79a7")
gear$color_code <-  str_replace_all(gear$color_code,"gre","#009e73")
gear$color_code <-  str_replace_all(gear$color_code,"red","#d55e00")
gear$color_code <-  str_replace_all(gear$color_code,"org","#e69f00")
gear$color_code <-  str_replace_all(gear$color_code,"yel","#f0e442")
gear$color_code <-  str_replace_all(gear$color_code,"gry","#BBBBBB")
gear$color_code <-  str_replace_all(gear$color_code,"pur","#cc79a7")
cams   <- filter(gear, type == "cam") %>% pull(brand_model) %>% unique()
nuts   <- filter(gear, type == "nut") %>% pull(brand_model) %>% unique()
hexes  <- filter(gear, type == "hex") %>% pull(brand_model) %>% unique()
print("cams")
print(cams)
print("nuts")
print(nuts)
print("hexes")
print(hexes)
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
#https://francojc.github.io/2014/12/19/publishing-rmarkdown-to-wordpress-or-jekyll/
library(knitr)
my.jekyll.site <- "joemcgirr.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/")
KnitPost("C:/Users/joseph.mcgirr/Personal/Github/joemcgirr.github.io/_pages/fun_projects.Rmd")
